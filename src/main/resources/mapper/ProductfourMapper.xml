<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.mapper.ProductfourMapper">
  <resultMap id="BaseResultMap" type="com.jd.pojo.Productfour">
    <id column="productFourId" jdbcType="INTEGER" property="productfourid" />
    <result column="productFourName" jdbcType="VARCHAR" property="productfourname" />
    <result column="productFourDescription" jdbcType="VARCHAR" property="productfourdescription" />
    <result column="productFourUrl" jdbcType="VARCHAR" property="productfoururl" />
    <result column="threeId" jdbcType="INTEGER" property="threeid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    productFourId, productFourName, productFourDescription, productFourUrl, threeId
  </sql>
  <select id="selectByExample" parameterType="com.jd.pojo.ProductfourExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ProductFour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ProductFour
    where productFourId = #{productfourid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ProductFour
    where productFourId = #{productfourid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.pojo.ProductfourExample">
    delete from ProductFour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.pojo.Productfour">
    insert into ProductFour (productFourId, productFourName, productFourDescription, 
      productFourUrl, threeId)
    values (#{productfourid,jdbcType=INTEGER}, #{productfourname,jdbcType=VARCHAR}, #{productfourdescription,jdbcType=VARCHAR}, 
      #{productfoururl,jdbcType=VARCHAR}, #{threeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jd.pojo.Productfour">
    insert into ProductFour
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productfourid != null">
        productFourId,
      </if>
      <if test="productfourname != null">
        productFourName,
      </if>
      <if test="productfourdescription != null">
        productFourDescription,
      </if>
      <if test="productfoururl != null">
        productFourUrl,
      </if>
      <if test="threeid != null">
        threeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productfourid != null">
        #{productfourid,jdbcType=INTEGER},
      </if>
      <if test="productfourname != null">
        #{productfourname,jdbcType=VARCHAR},
      </if>
      <if test="productfourdescription != null">
        #{productfourdescription,jdbcType=VARCHAR},
      </if>
      <if test="productfoururl != null">
        #{productfoururl,jdbcType=VARCHAR},
      </if>
      <if test="threeid != null">
        #{threeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.pojo.ProductfourExample" resultType="java.lang.Long">
    select count(*) from ProductFour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ProductFour
    <set>
      <if test="record.productfourid != null">
        productFourId = #{record.productfourid,jdbcType=INTEGER},
      </if>
      <if test="record.productfourname != null">
        productFourName = #{record.productfourname,jdbcType=VARCHAR},
      </if>
      <if test="record.productfourdescription != null">
        productFourDescription = #{record.productfourdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.productfoururl != null">
        productFourUrl = #{record.productfoururl,jdbcType=VARCHAR},
      </if>
      <if test="record.threeid != null">
        threeId = #{record.threeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ProductFour
    set productFourId = #{record.productfourid,jdbcType=INTEGER},
      productFourName = #{record.productfourname,jdbcType=VARCHAR},
      productFourDescription = #{record.productfourdescription,jdbcType=VARCHAR},
      productFourUrl = #{record.productfoururl,jdbcType=VARCHAR},
      threeId = #{record.threeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.pojo.Productfour">
    update ProductFour
    <set>
      <if test="productfourname != null">
        productFourName = #{productfourname,jdbcType=VARCHAR},
      </if>
      <if test="productfourdescription != null">
        productFourDescription = #{productfourdescription,jdbcType=VARCHAR},
      </if>
      <if test="productfoururl != null">
        productFourUrl = #{productfoururl,jdbcType=VARCHAR},
      </if>
      <if test="threeid != null">
        threeId = #{threeid,jdbcType=INTEGER},
      </if>
    </set>
    where productFourId = #{productfourid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.pojo.Productfour">
    update ProductFour
    set productFourName = #{productfourname,jdbcType=VARCHAR},
      productFourDescription = #{productfourdescription,jdbcType=VARCHAR},
      productFourUrl = #{productfoururl,jdbcType=VARCHAR},
      threeId = #{threeid,jdbcType=INTEGER}
    where productFourId = #{productfourid,jdbcType=INTEGER}
  </update>
</mapper>