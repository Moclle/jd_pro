<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.mapper.ProductoneMapper">

    <resultMap id="One2TwoMap" type="com.jd.VO.ProductOne2TwoVO">
        <id column="productOneId" jdbcType="INTEGER" property="productoneid"/>
        <result column="productOneName" jdbcType="VARCHAR" property="productonename"/>
        <result column="productOneUrl" jdbcType="VARCHAR" property="productoneurl"/>
        <collection property="producttwoList" ofType="com.jd.pojo.Producttwo">
            <id column="productTwoId" property="producttwoid"/>
            <result column="productTwoName" property="producttwoname"/>
            <result column="productTwoUrl" property="producttwourl"/>
        </collection>
    </resultMap>

    <select id="myGetOne2TwoList" resultMap="One2TwoMap">
      SELECT
      a.productOneId,
      a.productOneName,
      a.productOneUrl,
      b.productTwoId,
      b.productTwoName,
      b.productTwoUrl
      FROM
      ProductOne a
      INNER JOIN ProductTwo b on a.productOneId = b.oneId
    </select>

    <resultMap id="One2ThreeAndFourMap" type="com.jd.VO.ProductOne2ThreeAndFourVO">
        <id column="productOneId" jdbcType="INTEGER" property="productoneid"/>
        <result column="productOneName" jdbcType="VARCHAR" property="productonename"/>
        <result column="productOneUrl" jdbcType="VARCHAR" property="productoneurl"/>
        <collection property="productOne2ThreeVOList" ofType="com.jd.VO.ProductThree2FourVO">
            <id column="productThreeId" property="productthreeid"/>
            <result column="productThreeName" property="productthreename"/>
            <result column="productThreeUrl" property="productthreeurl"/>
            <collection property="productfourList" ofType="com.jd.pojo.Productfour">
                <id column="productFourId" property="productfourid"/>
                <result column="productFourName" property="productfourname"/>
                <result column="productFourUrl" property="productfoururl"/>
            </collection>
        </collection>
    </resultMap>

    <select id="myGetOne2ThreeAndFourList" resultMap="One2ThreeAndFourMap">
      SELECT
      a.productOneId,
      a.productOneName,
      a.productOneUrl,
      PT.productThreeId,
      PT.productThreeName,
      PT.productThreeUrl,
      PF.productFourId,
      PF.productFourName,
      PF.productFourUrl
      FROM
      ProductOne a
      INNER JOIN ProductThree PT on a.productOneId = PT.oneId
      INNER JOIN ProductFour PF on PT.productThreeId = PF.threeId
    </select>

    <resultMap id="BaseResultMap" type="com.jd.pojo.Productone">
        <id column="productOneId" jdbcType="INTEGER" property="productoneid"/>
        <result column="productOneName" jdbcType="VARCHAR" property="productonename"/>
        <result column="productOneDescirption" jdbcType="VARCHAR" property="productonedescirption"/>
        <result column="productOneUrl" jdbcType="VARCHAR" property="productoneurl"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    productOneId, productOneName, productOneDescirption, productOneUrl
  </sql>
    <select id="selectByExample" parameterType="com.jd.pojo.ProductoneExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ProductOne
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ProductOne
        where productOneId = #{productoneid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ProductOne
    where productOneId = #{productoneid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.jd.pojo.ProductoneExample">
        delete from ProductOne
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jd.pojo.Productone">
    insert into ProductOne (productOneId, productOneName, productOneDescirption, 
      productOneUrl)
    values (#{productoneid,jdbcType=INTEGER}, #{productonename,jdbcType=VARCHAR}, #{productonedescirption,jdbcType=VARCHAR}, 
      #{productoneurl,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.jd.pojo.Productone">
        insert into ProductOne
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productoneid != null">
                productOneId,
            </if>
            <if test="productonename != null">
                productOneName,
            </if>
            <if test="productonedescirption != null">
                productOneDescirption,
            </if>
            <if test="productoneurl != null">
                productOneUrl,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productoneid != null">
                #{productoneid,jdbcType=INTEGER},
            </if>
            <if test="productonename != null">
                #{productonename,jdbcType=VARCHAR},
            </if>
            <if test="productonedescirption != null">
                #{productonedescirption,jdbcType=VARCHAR},
            </if>
            <if test="productoneurl != null">
                #{productoneurl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jd.pojo.ProductoneExample" resultType="java.lang.Long">
        select count(*) from ProductOne
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ProductOne
        <set>
            <if test="record.productoneid != null">
                productOneId = #{record.productoneid,jdbcType=INTEGER},
            </if>
            <if test="record.productonename != null">
                productOneName = #{record.productonename,jdbcType=VARCHAR},
            </if>
            <if test="record.productonedescirption != null">
                productOneDescirption = #{record.productonedescirption,jdbcType=VARCHAR},
            </if>
            <if test="record.productoneurl != null">
                productOneUrl = #{record.productoneurl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ProductOne
        set productOneId = #{record.productoneid,jdbcType=INTEGER},
        productOneName = #{record.productonename,jdbcType=VARCHAR},
        productOneDescirption = #{record.productonedescirption,jdbcType=VARCHAR},
        productOneUrl = #{record.productoneurl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jd.pojo.Productone">
        update ProductOne
        <set>
            <if test="productonename != null">
                productOneName = #{productonename,jdbcType=VARCHAR},
            </if>
            <if test="productonedescirption != null">
                productOneDescirption = #{productonedescirption,jdbcType=VARCHAR},
            </if>
            <if test="productoneurl != null">
                productOneUrl = #{productoneurl,jdbcType=VARCHAR},
            </if>
        </set>
        where productOneId = #{productoneid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jd.pojo.Productone">
    update ProductOne
    set productOneName = #{productonename,jdbcType=VARCHAR},
      productOneDescirption = #{productonedescirption,jdbcType=VARCHAR},
      productOneUrl = #{productoneurl,jdbcType=VARCHAR}
    where productOneId = #{productoneid,jdbcType=INTEGER}
  </update>
</mapper>